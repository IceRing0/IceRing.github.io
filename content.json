{"meta":{"title":"IceRing","subtitle":"IceRing's blog","description":null,"author":"IceRing","url":"https://IceRing0.github.io","root":"/"},"pages":[{"title":"categories","date":"2019-07-24T06:34:10.000Z","updated":"2019-07-24T06:35:09.268Z","comments":false,"path":"categories/index.html","permalink":"https://IceRing0.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-07-24T06:20:38.000Z","updated":"2019-07-24T06:35:27.213Z","comments":false,"path":"tags/index.html","permalink":"https://IceRing0.github.io/tags/index.html","excerpt":"","text":""},{"title":"","date":"2019-08-01T01:15:24.682Z","updated":"2019-08-01T00:41:22.624Z","comments":true,"path":"about/index.html","permalink":"https://IceRing0.github.io/about/index.html","excerpt":"","text":"关于我从事 WEB 开发，主要开发语言 PHP，熟悉使用 Laravel、ThinkPHP 等主流框架；对 Modern PHP 情有独钟；有一定的代码洁癖。 对服务端、前端、数据分析等技能有所了解。 热爱开源项目、热爱新技术、热爱新事物。 关于工作城市：深圳 关于学习正在往终身学习者前进…近期学习方向：Python (人工智能) 关于座右铭 The Harder You Work, The Luckier You Will Be. (越努力，越幸运) 关于爱好热爱运动，尤其喜爱羽毛球、阅读、电影（Top250）、旅行。 联系我 Home: minhow.com Blog: blog.minhow.com Email: huangminhow@gmail.com GitHub: MinHow WeiBo: MinHow Twitter: MinHow"}],"posts":[{"title":"css学习笔记","slug":"css学习笔记","date":"2019-08-05T08:31:23.000Z","updated":"2019-08-09T07:33:41.369Z","comments":true,"path":"2019/08/05/css学习笔记/","link":"","permalink":"https://IceRing0.github.io/2019/08/05/css学习笔记/","excerpt":"","text":"css介绍层叠样式表(英文全称：Cascading Style Sheets)是一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。 层叠：多个样式表修饰同一个元素，拥有继承和优先级的属性。 在html中如何应用css 在元素中添加style属性，style属性值为css样式规则 &lt;div style=&quot;width:100px;height:100px;&quot;&gt;&lt;/div&gt;缺点:样式与结构与杂糅优点:简单直接，优先级高 将样式添加到head标签中的style标签里 将样式定义在css文件中，通过link导入进来 语法选择器 { 样式名:样式值; 样式名:样式值; … } 选择器 核心选择器 标签选择器 1div &#123;&#125; id选择器 1#one &#123;&#125; class选择器 1.second &#123;&#125; 逗号选择器 12div,#one &#123;&#125;ul,ol &#123;&#125; 组合选择器 1div#one &#123;&#125; 普遍选择器 *不单独使用 层次选择器 子选择器 1.nav &gt; ul &gt; li &#123;&#125; 后代选择器 1.nav li &#123;&#125; 下一个兄弟选择器 1.products &gt; li.ios + *&#123;&#125; 之后所有兄的选择器 1.products &gt; li.ios ~ *&#123;&#125; 属性选择器,过滤（表单元素） 123456selector[]input[placeholder]input[type=text]input[type^=t]input[type$=t]input[type*=t] 伪类选择器 与状态相关 1234:link a标签还未被访问:hover 光标悬浮到元素上:active a标签激活:visited a标签访问过 与子元素相关 1234567:first-child:last-child:nth-child(v) v 为数字，公式，关键字:first-of-type:last-of-type:nth-of-type 伪元素选择器 12345678::after::before副作用：在dom节点中产生一个新节点了解::first-letter::first-line::selection 规则 字体样式（可以被继承） 1234567891011121314151617181920font-family:\"微软雅黑\",\"Microsoft YaHei\",\"宋体\",serif;font-size:12px; 字体大小 浏览器默认字体为16pxfont-weight:bold; 字体粗细 normal bolder 100~900font-style:normal; 是否开启斜体 italicline-height:2em; 行高【文本垂直居中】font:style weight size/line-height family; 例如：italic bold 12px/2em 'Microsoft YaHei',serif网络字体 主要用于字体图标库（iconfont/fontawesome）使用步骤： 1) 在iconfont网站中选择图标，加入项目，产生代码 2) 将产生的代码在html中通过link引用 http://at.alicdn.com/t/font_1328534_f3dyyeuoew.css 3) 应用css中定义好的类，来使用对应的图标 文本样式(可以被继承) 12345678910111213141516171819color:#333; 字体颜色text-align:center 【文本水平居中】text-decoration-line underline line-through overline nonetext-decoration-style solid dotted double dashed wavy ...text-decoration-color 颜色text-decoration:none; 字体装饰text-indent:2em; 文本缩进text-shadow:12px 2px 3px #ccc; 列表样式 12345678910list-style-type circle square ...list-style-image url('')list-style-position outside insidelist-style:none; 盒子样式(盒子，块元素) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596widthheightmargin-topmargin-rightmargin-bottommargin-leftmargin margin:10px; 上右下左 margin:0 10px; 上下为0，左右10px margin:0 5px 10px; 上0，左右5px，下10px margin:0 5px 10px 15px; 上右下左 border-top-style 边框线类型border-top-width 边框宽度border-top-color 边框线颜色border-topborder-right-style 边框线类型border-right-width 边框宽度border-right-color 边框线颜色border-rightborder-bottom-style 边框线类型border-bottom-width 边框宽度border-bottom-color 边框线颜色border-bottomborder-left-style 边框线类型border-left-width 边框宽度border-left-color 边框线颜色border-leftborder-colorborder-styleborder-widthborder:1px solid #ededed; 【*】padding-toppadding-rightpadding-bottompadding-leftpaddingbox-shadow: 5px 5px 10px #ccc;box-shadow:inset 0 0 3px lightblue;border-radius 圆角半径background-origin 背景铺设的起点 border-box 边框下 padding-box 内边距下 content-box 内容下background-image 背景图片 urlbackground-repeat 背景重复方式 repeat-x repeat-y no-repeatbackground-color 背景颜色 颜色background-position 背景位置 center top left 10px 20pxbackground-clip 背景裁切方式 border-box 边框下 padding-box 内边距下 content-box 内容下background 速写 background:url('') no-repeat center; background-size:cover; =&gt; background:center/cover padding-box url('') no-repeat ;一个盒子的组成： 外边距 margin 边框 border 内边距 padding 内容 存放子元素或者内容的区域 盒子所占面积？ 盒子存放内容的区域为多大?盒子计算方式 box-sizing:content-box;内容盒子（传统盒子） width = 内容宽 height = 内容高 所占的宽 = border + padding + width 所占的高 = border + padding + height box-sizing:border-box;边框盒子（怪异盒子） width = 边框以内所有的和 width = border + padding + 内容宽 单位1234567891011121314151617181920212223242526272829颜色 #333333 =&gt; #333 #ededed rgb(0,0,0) =&gt;#000000 rgba(0,0,0,0.3) 渐变长度 绝对单位 px 相对单位 em 当前元素上的font-size的值 font-size:12px ; 1em = 12px; 2em = 24px; rem html&#123;font-size:14px&#125; 1rem = 14px; % width 相对于父元素 border-radius 相对于当前元素的width ...关键 center border-box content-box函数 url() rgb() rgba() 布局使用块元素搭建页面框架布局的本质就是让块元素在一行中显示 浮动布局 1234567891011121314151617181920212223242526272829303132333435363738float:left/right脱离文档流： 1) 宽度高度默认由内容决定 2) 原先所在位置就会被其他块元素抢占 3) 浮动元素在一行中依次排列，当一行无法容纳的时候会自动换行应用：1) 全部浮动（2+ 列） ul::after &#123; display:block; content:\"\"; clear:both; &#125; ul&gt; li &#123; float:left; with:计算 &#125; &lt;ul&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;/ul&gt;2) 左侧浮动，右侧不浮动（2列） .content &gt; .left&#123; float:left; width:220px; &#125; .content &gt; .right &#123; margin-left:230px; &#125; &lt;div class=\"content\"&gt; &lt;div class=\"left\"&gt;&lt;/div&gt; &lt;div class=\"right\"&gt;&lt;/div&gt; &lt;/div&gt; 定位布局 1234567891011121314151617181920212223242526272829301) 作用：当一个元素悬挂在其他元素之上，优先考虑定位布局 eg: 模态框、下拉菜单、二级菜单、固定宣传栏、网页聊天页面2) 用法： position:static/ relative / absolute / fixed / static 默认 静态布局，默认文档流中，非定位元素 relative 定位元素(相对定位) 1) 没有脱离文档流 2) 参照点为当前元素原本的位置 absolute 定位元素(绝对定位) 1) 脱离了文档流 2) 参照距离当前元素最近的父定位元素，如果所有的父元素都没有定位元素，参照浏览器视口 fixed 定位元素(固定定位) 1) 脱离了文档流 2) 参照浏览器视口 sticky 定位元素(粘滞定位) 1) 不脱离文档流 2) relative 和 fixed 的结合 top:50px 当当前元素距离浏览器视口顶端为50px的时候，体现fixed的特点 定位元素的特点 可以使用描述当前元素位置的属性 top、right、bottom、left z-index 参照点 是否脱离文档流 伸缩盒布局 123456789101112131415161718192021222324252627282930313233343536371) 作用：使得子元素在父元素中分列显示，与float的作用类似。一般用于响应式布局（手机app中）2) 用法 1. 父元素在主轴上一定要有一个固定的宽/高 2. 子元素在交叉轴上默认宽/高占满父元素 如果主轴为x轴，那么资源的默认高度占满父元素 如果主轴为y轴，那么资源的默认宽度占满父元素 3. ul &#123; display:flex; &#125; &lt;ul&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;li&gt;&lt;/li&gt; &lt;/ul&gt; ul 伸缩盒 1)设置父元素为伸缩盒 (display) flex 2) 主轴 （flex-direction） 主轴 默认情况下为x轴 row 【左中右】/column【上中下】 交叉轴 默认情况下为y轴 元素沿着伸缩盒的主轴排列的 3) 伸缩盒自动换行（flex-wrap） 子元素宽度和大于父元素的时候是否换行 nowrap 默认值，不换行 wrap 换行 li 伸缩盒的元素 1) 基础值 flex-basis 主轴上元素的基础值(宽/高) 2) 对盈余空间的分配 flex-grow 3) 对亏损空间的贡献 flex-shrink: 4) 速写 flex: grow shrink bas 动画 动画定义 123456789101112131415161718192021@keyframes 动画名称&#123; from &#123; &#125; to&#123; &#125;&#125; @keyframes 动画名称&#123; 10% &#123; &#125; 20%&#123; &#125; ... 100%&#123; &#125;&#125; 动画应用 123456789101112131415161718192021@keyframes 动画名称&#123; from &#123; &#125; to&#123; &#125;&#125; @keyframes 动画名称&#123; 10% &#123; &#125; 20%&#123; &#125; ... 100%&#123; &#125;&#125; 第三方动画库 封装了css3的通用的动画样式，专业https://daneden.github.io/animate.css/ 引入动画库 为元素添加class 过渡效果(transition) transition和animation的区别 transition必须要触发，一般使用:hover transition不需要设置关键帧简单的过渡效果使用transition，复杂的动画使用animation 用法 12345678910111213transition-property 指定过渡的属性 可以指定一个属性 width 可以指定多个属性 width,background 可以指定所有属性 alltransition-duration 过渡持续的时间 可以指定秒，以及毫秒 s /mstransition-timing-function 过渡的时间曲线transition-delay 过渡延迟 可以指定秒，以及毫秒 s /mstransition 速写 transition:property duration timing delay; 例如： transition: margin-right 2s ease-in-out .5s; 变形(transform:)12345678910111213scale(2) 变大 skewX(45deg) 倾斜 skewY(45deg) 倾斜 skew(45deg) 倾斜 rotate(45deg) 旋转 rotateX(45deg) 旋转 rotateY(45deg) 旋转 rotateZ(45deg) 旋转 translateX(200px) translateY(300px) translate(200px,300px) ... mdn 媒体查询 网页在不同终端下显示不同布局？ 123456789101) 多套网页(京东，淘宝，网易) pc index_pc.html mobile index_mobile.html pad index_pad.html2) 一套（） index_all.html 可以适应所有的屏幕 @media screen and (min-width: 768px) and (max-width: 1024px) &#123;&#125; @media screen and (min-width: 1024px)&#123;&#125; 响应式布局框架（bootstrap） 123456789布局（响应式） 1) 媒体查询 media 2) 布局（float , flex）框架 Bootstrap 十二栅格系统 vue elementui 24栅格系统","categories":[],"tags":[{"name":"web前端","slug":"web前端","permalink":"https://IceRing0.github.io/tags/web前端/"},{"name":"css","slug":"css","permalink":"https://IceRing0.github.io/tags/css/"}]},{"title":"Html学习笔记","slug":"html学习笔记","date":"2019-07-31T02:25:01.000Z","updated":"2019-08-05T08:24:06.741Z","comments":true,"path":"2019/07/31/html学习笔记/","link":"","permalink":"https://IceRing0.github.io/2019/07/31/html学习笔记/","excerpt":"","text":"Html超文本标记语言（英语：HyperText Markup Language，简称：HTML）是一种用于创建网页的标准标记语言。 B/S架构B是指浏览器 S是指服务器 网络概念 Http 超文本传输协议 url 统一资源定位符 uri 统一资源标识符 Html网页 开发流程 编写网页 本地测试 部署 将本地的html网页上传至云服务器上，并且部署到apache静态服务器上 网络测试 网页元素由程序员编写，浏览器解析 注释 元素 开始标签，子元素，结束标签 123&lt;div&gt; &lt;span&gt;hello world&lt;/span&gt;&lt;/div&gt; 属性 核心属性 &lt;div class=&quot;first one&quot;&gt; one &lt;/div&gt; 特有属性 h5拓展属性 &lt;div data-nn=&apos;one&apos;&gt;&lt;/div&gt; 结构 doctype 声明部分 html head 不会显示到浏览器窗口中 title 显示在浏览器选项卡 meta 用于设置元信息，配置 body 网页主体 元素块元素作用：作为页面框架，或者容器，是页面的主体 特性： 独占一行 默认宽度为100%，默认高度由子元素或者内容决定 可为其指定宽高 style=”width:;height:;” div 无意义的块元素（无招）h1~h3 标题属性： font-size font-weight margin p 段落htmlbodyul、li 无序列表，列表项 ul margin padding list-style li ol、li 有序列表，列表项 ol marginpaddingist-style dl、dt、dd 有序列表 dl margin dd margin h5新增的块元素 （语义化标签） header(头) nav article（主体） section (部分) footer（脚） aside 行内元素作用点缀网页，填充内容。 特性 与其他行内元素共享一行空间 默认宽高由内容决定 不能为其指定宽和高 行内元素中不可以嵌套块元素，但块元素中可以嵌套行内元素 span 无意义的行内元素a 超级链接（axure中的open link） 默认样式 color text-decoration cursor 默认事件（js - dom） 点击事件 href（url、相对路径、绝对路径、、mailto、锚点） img src 图片地址 url（相对路径、绝对路径、base64格式的数据） alt 图片找不到的时候文本替换 功能元素表格table 【属性】border、width、、、、 caption 表格标题 thead 表头部分 tr th/td tbody 表格主体部分【不可以省略】 tr td/th【属性】colspan、rowspan、width、align td/th中可以放任意子元素 tfoot 表底部 tr td 注意： 每一行中的列数应该是相等。 表单（前后台交互）用户 -&gt; 表单 -&gt; 后台 -&gt; 数据库 12345&lt;form action=\"\"&gt; input select textarea&lt;/form&gt; form action 后台接口地址 method 请求方式 get 参数拼接在url后面，通过?来分割。 传递参数较少。 查询学生信息、通过id删除学生信息。 post 参数存放在请求体中，安全。 传递参数更多。 保存或者更新学生信息、批量删除。 enctype 编码方式 enctype=’application/x-www-form-urlencoded’ 浏览器就会将参数转换为【查询字符串 qs】格式。 multipart/form-data 当有附件在表单中的时候，enctype务必设置为这种格式。 ajax input name 不能省略，作为参数中的key。 value 作为参数中的value,在按钮中务必指定value值。 type text 单行文本框password 密码框submit 提交按钮file 附件选择器radio 单选按钮checkbox 复选按钮 checked placeholder select option 标签中的文本显示在网页中，提交的值应该是option的value值，当这个值没有设定的时候，提交的是标签中的文本。 第三方库 日期插件 地址选择器地址 附件上传 富文本","categories":[],"tags":[{"name":"web前端","slug":"web前端","permalink":"https://IceRing0.github.io/tags/web前端/"},{"name":"html","slug":"html","permalink":"https://IceRing0.github.io/tags/html/"}]},{"title":"Axure学习笔记 Day02","slug":"Axure学习笔记 Day02","date":"2019-07-30T13:41:29.000Z","updated":"2019-07-31T02:30:41.530Z","comments":true,"path":"2019/07/30/Axure学习笔记 Day02/","link":"","permalink":"https://IceRing0.github.io/2019/07/30/Axure学习笔记 Day02/","excerpt":"","text":"Axure 的使用前端三要素(html/css/js) html 负责搭建页面框架。 css 层叠样式表，目的是为了修饰框架。 js 用于做交互。 围绕着三要素去学习 jquery ​ html + js(dom) 小程序 react ​ .js​ jsx js + xml(html)​ css Axure (英文环境)使用通过拖拽元件到页面里的方式来去组合成一个原型页面。 ​ 元件 -&gt; page box 盒子【块元素】div width height background padding margin border border-width border-style border-color border-radius image src input 程序交互入口 布局(box)通过盒子来进行布局。 布局流程： ​ 从上往下，从外到内 行级布局 列级布局 浮动 定位 伸缩盒 组（容器-子元素） 内置原件(css) 基础元件 box 段落 标题 …. 高级元件 内联框架 中继器 数据-&gt; 驱动-&gt; 页面（模板） 表单元件 单行文本域 多行文本域 单选按钮 复选按钮 下拉菜单 表格与菜单 图标 事件机制 事件源 事件处理函数 事件对象 第三方元件库 模态框","categories":[],"tags":[{"name":"web前端","slug":"web前端","permalink":"https://IceRing0.github.io/tags/web前端/"},{"name":"axure","slug":"axure","permalink":"https://IceRing0.github.io/tags/axure/"}]},{"title":"Axure学习笔记 Day01","slug":"Axure学习笔记 Day01","date":"2019-07-29T02:28:30.000Z","updated":"2019-07-31T02:30:14.540Z","comments":true,"path":"2019/07/29/Axure学习笔记 Day01/","link":"","permalink":"https://IceRing0.github.io/2019/07/29/Axure学习笔记 Day01/","excerpt":"","text":"Axure rp 介绍原型工具Axure RP是一款专业的快速原型设计工具。Axure（发音：Ack-sure），代表美国Axure公司；RP则是Rapid Prototyping（快速原型）的缩写。 Axure RP是美国Axure Software Solution公司旗舰产品，是一个专业的快速原型设计工具，让负责定义需求和规格、设计功能和界面的专家能够快速创建应用软件或Web网站的线框图、流程图、原型和规格说明文档。作为专业的原型设计工具，它能快速、高效的创建原型，同时支持多人协作设计和版本控制管理。 从软件开发的角度看软件开发的过程包含以下几个步骤 可行性分析 需求分析 在需求分析阶段乙方需要给甲方呈现效果图，这时需要工具来完成这个工作。 工具对比 ps 具有一定的专业性，精确度较高，一般不用在草图阶段。 html 可以通过html直接去写，可变性差，一次性成功率不高。 axure 结合ps和手写的优点，提供一系列组件，让我们快速的完成页面的编写。 产品设计。 产品设计 ps设计师。 开发阶段 对设计图进行实现。 淘宝(重构) 设计图psd –&gt; 拆分 –&gt; html 数据交互数据库 –&gt; 服务层java –&gt; html 概念理解（axure）块级元素行内元素行高背景边框内边距 软件应用Java unix（window）axure： 甲方（明确需求） 设计师 细化页面 前端工程师 重构（颜色、高度、布局） 后端工程师 数据建模 编程（软件开发、计算机）软件预览 界面介绍 工具栏 属性栏 导航 元件库 主界面 属性看 图层 应用 鼠标 file -&gt; new 键盘 ctrl + n 新建 积累ctrl + z 撤销回退ctrl + y 前进ctrl + c 复制ctrl + v 粘贴ctrl + g 组合 文本归档 .txt -&gt; 磁盘 归档 绘制思路 上 -&gt; 下 （横向盒子）外 -&gt; 内 、 左 -&gt; 右 (纵向盒子) 父子元素 ​ 导航 ​ 容器box ​ 购物车 box - 图标 (行内元素) ​ logo box - 文本 （行内元素) ​ 导航 box - 图标(行内元素)","categories":[],"tags":[{"name":"web前端","slug":"web前端","permalink":"https://IceRing0.github.io/tags/web前端/"},{"name":"axure","slug":"axure","permalink":"https://IceRing0.github.io/tags/axure/"}]},{"title":"MyFirstBlog","slug":"MyFirstBlog","date":"2019-07-24T06:02:27.000Z","updated":"2019-08-01T10:16:34.811Z","comments":true,"path":"2019/07/24/MyFirstBlog/","link":"","permalink":"https://IceRing0.github.io/2019/07/24/MyFirstBlog/","excerpt":"","text":"我的第一篇博客","categories":[],"tags":[{"name":"Blog","slug":"Blog","permalink":"https://IceRing0.github.io/tags/Blog/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-07-24T05:03:42.919Z","updated":"2019-07-24T05:03:42.920Z","comments":true,"path":"2019/07/24/hello-world/","link":"","permalink":"https://IceRing0.github.io/2019/07/24/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}